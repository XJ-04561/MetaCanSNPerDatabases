


TABLE_NAME_SNP_ANNOTATION	= "snp_annotation"
TABLE_NAME_REFERENCES		= "snp_references"
TABLE_NAME_TREE				= "tree"
TABLE_NAME_CHROMOSOMES		= "chromosomes"

TABLES = [TABLE_NAME_SNP_ANNOTATION, TABLE_NAME_REFERENCES, TABLE_NAME_TREE, TABLE_NAME_CHROMOSOMES]

SNP_COLUMN_NODE_ID,				SNP_COLUMN_NODE_ID_TYPE				= "node_id",		("INTEGER",					)
SNP_COLUMN_POSITION,			SNP_COLUMN_POSITION_TYPE			= "position",		("INTEGER", "UNIQUE"		)
SNP_COLUMN_ANCESTRAL,			SNP_COLUMN_ANCESTRAL_TYPE			= "ancestral_base",	("VARCHAR(1)",				)
SNP_COLUMN_DERIVED,				SNP_COLUMN_DERIVED_TYPE				= "derived_base",	("VARCHAR(1)",				)
SNP_COLUMN_REFERENCE,			SNP_COLUMN_REFERENCE_TYPE			= "reference",		("VARCHAR(20)",				)
SNP_COLUMN_DATE,				SNP_COLUMN_DATE_TYPE				= "date",			("DATETIME",				)
SNP_COLUMN_CHROMOSOMES_ID,		SNP_COLUMN_CHROMOSOMES_ID_TYPE		= "chromosome_id",	("INTEGER",					)

REFERENCE_COLUMN_GENOME_ID,		REFERENCE_COLUMN_GENOME_ID_TYPE		= "genome_id",		("INTEGER", "UNIQUE"		)
REFERENCE_COLUMN_GENOME,		REFERENCE_COLUMN_GENOME_TYPE		= "genome",			("VARCHAR(30)",				)
REFERENCE_COLUMN_STRAIN,		REFERENCE_COLUMN_STRAIN_TYPE		= "strain",			("VARCHAR(30)",				)
REFERENCE_COLUMN_GENBANK,		REFERENCE_COLUMN_GENBANK_TYPE		= "genbank_id",		("VARCHAR(30)",				)
REFERENCE_COLUMN_REFSEQ,		REFERENCE_COLUMN_REFSEQ_TYPE		= "refseq_id",		("VARCHAR(30)",				)
REFERENCE_COLUMN_ASSEMBLY,		REFERENCE_COLUMN_ASSEMBLY_TYPE		= "assembly_name",	("VARCHAR(30)",				)

TREE_COLUMN_CHILD,				TREE_COLUMN_CHILD_TYPE				= "node_id",		("INTEGER", "UNIQUE"		)
TREE_COLUMN_PARENT,				TREE_COLUMN_PARENT_TYPE				= "parent",			("INTEGER", "NOT NULL"		)
TREE_COLUMN_NAME,				TREE_COLUMN_NAME_TYPE				= "name",			("TEXT", "NOT NULL"			)

CHROMOSOMES_COLUMN_ID,			CHROMOSOMES_COLUMN_ID_TYPE			= "chromosome_id",	("INTEGER", "UNIQUE"		)
CHROMOSOMES_COLUMN_NAME,		CHROMOSOMES_COLUMN_NAME_TYPE		= "chromosome",		("VARCHAR(30)", "NOT NULL"	)
CHROMOSOMES_COLUMN_GENOME_ID,	CHROMOSOMES_COLUMN_GENOME_ID_TYPE	= "genome_id",		("INTEGER", "NOT NULL"		)


SNP_APPEND = [
    f"PRIMARY KEY ({SNP_COLUMN_POSITION}, {SNP_COLUMN_CHROMOSOMES_ID})"
	f"FOREIGN KEY ({SNP_COLUMN_CHROMOSOMES_ID}) REFERENCES {TABLE_NAME_CHROMOSOMES} ({CHROMOSOMES_COLUMN_ID})",
    f"FOREIGN KEY ({SNP_COLUMN_NODE_ID}) REFERENCES {TABLE_NAME_TREE} ({TREE_COLUMN_CHILD})"
]
REFERENCE_APPEND = []
TREE_APPEND = [
	f"UNIQUE ({TREE_COLUMN_PARENT}, {TREE_COLUMN_CHILD})"
]
CHROMOSOMES_APPEND = [
	f"FOREIGN KEY ({CHROMOSOMES_COLUMN_ID}) REFERENCES {TABLE_NAME_REFERENCES} ({REFERENCE_COLUMN_GENOME_ID})"
	]

# INDEX = (NAME, COLUMN_1, COLUMN_2, ..., COLUMN_N)
SNP_INDEXES = [
	(f"{TABLE_NAME_SNP_ANNOTATION}By{SNP_COLUMN_POSITION.capitalize()}",		SNP_COLUMN_POSITION),
	(f"{TABLE_NAME_SNP_ANNOTATION}By{SNP_COLUMN_CHROMOSOMES_ID.capitalize()}",	SNP_COLUMN_CHROMOSOMES_ID),
	(f"{TABLE_NAME_SNP_ANNOTATION}By{SNP_COLUMN_NODE_ID.capitalize()}",			SNP_COLUMN_NODE_ID)
]
REFERENCE_INDEXES = [
	(f"{TABLE_NAME_REFERENCES}By{REFERENCE_COLUMN_GENOME.capitalize()}",		REFERENCE_COLUMN_GENOME),
	(f"{TABLE_NAME_REFERENCES}By{REFERENCE_COLUMN_ASSEMBLY.capitalize()}",		REFERENCE_COLUMN_ASSEMBLY),
]
TREE_INDEXES = [
	(f"{TABLE_NAME_TREE}By{TREE_COLUMN_PARENT.capitalize()}",					TREE_COLUMN_PARENT),
	(f"{TABLE_NAME_TREE}By{TREE_COLUMN_CHILD.capitalize()}",					TREE_COLUMN_CHILD),
]
CHROMOSOMES_INDEXES = [
	(f"{TABLE_NAME_CHROMOSOMES}By{CHROMOSOMES_COLUMN_ID.capitalize()}",			CHROMOSOMES_COLUMN_ID),
	(f"{TABLE_NAME_CHROMOSOMES}By{CHROMOSOMES_COLUMN_NAME.capitalize()}",		CHROMOSOMES_COLUMN_NAME),
	(f"{TABLE_NAME_CHROMOSOMES}By{CHROMOSOMES_COLUMN_GENOME_ID.capitalize()}",	CHROMOSOMES_COLUMN_GENOME_ID)
]